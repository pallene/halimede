#!/usr/bin/env sh
# This file is part of halimede. It is subject to the licence terms in the COPYRIGHT file found in the top-level directory of this distribution and at https://raw.githubusercontent.com/pallene/halimede/master/COPYRIGHT. No part of halimede, including this file, may be copied, modified, propagated, or distributed except according to the terms contained in the COPYRIGHT file.
# Copyright Â© 2015-2016 The developers of halimede. See the COPYRIGHT file in the top-level directory of this distribution and at https://raw.githubusercontent.com/pallene/halimede/master/COPYRIGHT.


set -e
set -u
set -f

# pdksh / mksh have problems with unsetting a variable that was never set...
if [ "${CDPATH+set}" = 'set' ]; then
	unset CDPATH
fi

_program_path_find()
{
	if [ "${0%/*}" = "$0" ]; then

		# We've been invoked by the interpreter as, say, bash program
		if [ -r "$0" ]; then
			pwd -P
		# Clutching at straws; probably run via a download, anonymous script, etc, weird execve, etc
		else
			printf '\n'
		fi
		
	else
	
		# We've been invoked with a relative or absolute path (also when invoked via PATH in a shell)
		
		_program_path_find_parentPath()
		{
			parentPath="${scriptPath%/*}"
			if [ -z "$parentPath" ]; then
				parentPath='/'
			fi
			cd "$parentPath" 1>/dev/null
		}
		
		if command -v realpath 1>/dev/null 2>/dev/null; then
			(
				scriptPath="$(realpath "$0")"
				
				_program_path_find_parentPath
				pwd -P
			)
		elif command -v readlink 1>/dev/null 2>/dev/null; then
			(
				scriptPath="$0"
				
				while [ -L "$scriptPath" ]
				do
					_program_path_find_parentPath
					scriptPath="$(readlink "$scriptPath")"
				done

				_program_path_find_parentPath
				pwd -P
			)
		else
			# This approach will fail in corner cases where the script itself is a symlink in a path not parallel with the concrete script
			(
				scriptPath="$0"
				
				_program_path_find_parentPath
				pwd -P
			)
		fi
		
	fi
}

luajit_compile_findLuajitBinaryFilePath()
{
	# Also kahlua.sh, luaj
	local luajitBinary
	for luajitBinary in luajit-2.0.4 luajit
	do
		if command -v "$luajitBinary" 1>/dev/null 2>/dev/null; then
			luajit_compile_luajitBinaryFilePath="$(command -v "$interpreter")"
			return 0
		fi
	done
	
	printf '%s\n' "Could not find a LuaJIT binary on the PATH ('$PATH')" 1>&2
	exit 1
}

luajit_compile_showHelp()
{
	printf 'luajit-compile path/to/module'
}

# Based on code at https://stackoverflow.com/questions/11317269/how-to-compile-lua-scripts-into-a-single-executable-while-still-gaining-the-fas
luajit_compile_main()
{
	if [ $# -ne 1 ]; then
		
	_program_path="$(_program_path_find)"
	
	local luajit_compile_luajitBinaryFilePath
	luajit_compile_findLuajitBinaryFilePath
}
luajit_compile_main "$@"
